name: CMake

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        conf: [Debug, Release]
    
    env:
      BUILD_TYPE: ${{ matrix.conf }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true
    
    - name: Install packages
      run: sudo apt-get install gcc-multilib g++-multilib
      
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build
      
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: | 
          ~/build/_deps/boost-src
        key: ${{ runner.os }}-boost-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: ${{ runner.os }}-boost-
      
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
      
    - name: Prepare artifacts
      run: |
        mkdir -p publish/linux32/${{env.BUILD_TYPE}}
        mkdir -p publish/assets
        ls build
        ls build/src
        mv build/src/building_amxx_i386.so publish/linux32/${{env.BUILD_TYPE}}/building_amxx_i386.so
        mv data/assets/* publish/assets
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux32
        path: publish/*
      
  build-win:
    runs-on: windows-latest

    strategy:
      matrix:
        conf: [Debug, Release]
    
    env:
      BUILD_TYPE: ${{ matrix.conf }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true
      
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build
      
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: | 
          ~/build/_deps/boost-src
        key: ${{ runner.os }}-boost-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: ${{ runner.os }}-boost-
      
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G "Visual Studio 16 2019" -T host=x86 -A win32 -Wno-dev

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
      
    - name: Prepare artifacts
      run: |
        mkdir publish\win32\${{env.BUILD_TYPE}}
        move build\src\${{env.BUILD_TYPE}}\building_amxx.dll publish\win32\${{env.BUILD_TYPE}}\building_amxx.dll
        move data\assets publish
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: win32
        path: publish/*
